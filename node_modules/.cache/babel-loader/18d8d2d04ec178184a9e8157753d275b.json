{"ast":null,"code":"var _jsxFileName = \"/home/dharun/React/expense-calc/react-app/src/components/Expense/ExpensesList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  _s();\n\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 15\n    }, this);\n  }\n\n  const [filteredYear, setFilteredYear] = useState();\n\n  const filterHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    const filteredExpense = items.filter(item => {\n      let year = item.date.getFullYear();\n      console.log(year + \" \" + selectedYear);\n\n      if (year === selectedYear) {\n        console.log(\"matched\");\n      }\n\n      return item.date.getFullYear() == selectedYear;\n    });\n    console.log(filteredExpense);\n    setItems(filteredExpense);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      className: \"expenses-filter\",\n      onChangeFilter: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this), props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpensesList, \"0OSnBI2oFTXEx44r2IB+aiYAUh4=\");\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/home/dharun/React/expense-calc/react-app/src/components/Expense/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesFilter","ExpensesList","props","items","length","filteredYear","setFilteredYear","useState","filterHandler","selectedYear","filteredExpense","filter","item","year","date","getFullYear","console","log","setItems","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,MAAMC,YAAY,GAAEC,KAAK,IAAI;AAAA;;AAEzB,MAAGA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACzB,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEF;;AAED,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,EAAhD;;AACA,QAAMC,aAAa,GAAIC,YAAD,IAAgB;AACpCH,IAAAA,eAAe,CAACG,YAAD,CAAf;AACA,UAAMC,eAAe,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAQ;AAC3C,UAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,GAAC,GAAL,GAASJ,YAArB;;AACA,UAAGI,IAAI,KAAKJ,YAAZ,EAAyB;AACvBO,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,aAAOL,IAAI,CAACE,IAAL,CAAUC,WAAV,MAA2BN,YAAlC;AACD,KAPuB,CAAxB;AAQAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ;AACAQ,IAAAA,QAAQ,CAACR,eAAD,CAAR;AACD,GAZD;;AAcA,sBAAO;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,4BACF,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEL,YAAzB;AAAuC,MAAA,SAAS,EAAC,iBAAjD;AACG,MAAA,cAAc,EAAEG;AADnB;AAAA;AAAA;AAAA;AAAA,YADE,EAGFN,KAAK,CAACC,KAAN,CAAYgB,GAAZ,CAAkBC,OAAD,iBACd,QAAC,WAAD;AAEG,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFlB;AAGG,MAAA,MAAM,EAAED,OAAO,CAACE,MAHnB;AAIG,MAAA,IAAI,EAAEF,OAAO,CAACN;AAJjB,OACQM,OAAO,CAACG,EADhB;AAAA;AAAA;AAAA;AAAA,YADH,CAHE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH,CAlCD;;GAAMtB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport './ExpensesList.css'; \nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nconst ExpensesList= props => {\n\n    if(props.items.length === 0){\n       return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\n\n    }\n\n    const [filteredYear, setFilteredYear] = useState();\n    const filterHandler = (selectedYear)=>{\n      setFilteredYear(selectedYear)\n      const filteredExpense = items.filter((item)=>{\n        let year = item.date.getFullYear()\n        console.log(year+\" \"+selectedYear);\n        if(year === selectedYear){\n          console.log(\"matched\");\n        }\n        return item.date.getFullYear() == selectedYear;\n      })\n      console.log(filteredExpense)\n      setItems(filteredExpense)\n    }\n    \n    return <ul className='expenses-list'>\n         <ExpenseFilter selected={filteredYear} className='expenses-filter' \n            onChangeFilter={filterHandler}></ExpenseFilter>\n        {props.items.map( (expense) => (\n            <ExpenseItem\n               key={expense.id}\n               title={expense.title}\n               amount={expense.amount} \n               date={expense.date}\n            />\n            ))}\n    </ul>\n};\nexport default ExpensesList;"]},"metadata":{},"sourceType":"module"}